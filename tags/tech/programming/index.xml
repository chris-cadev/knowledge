<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech/programming on</title><link>https://chris-cadev.github.io/knowledge/tags/tech/programming/</link><description>Recent content in tech/programming on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://chris-cadev.github.io/knowledge/tags/tech/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Design patterns - Strategy</title><link>https://chris-cadev.github.io/knowledge/Bibliography/Design-patterns-Strategy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chris-cadev.github.io/knowledge/Bibliography/Design-patterns-Strategy/</guid><description>#tech/architecture #tech/programming #design-patterns
Design patterns - Strategy Extracts strategy pattern graph Strategy pseudocode References source https://refactoring.</description></item><item><title>Design patterns definition Refactoring.GURU.</title><link>https://chris-cadev.github.io/knowledge/Extracts/Design-patterns-definition-Refactoring.GURU./</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chris-cadev.github.io/knowledge/Extracts/Design-patterns-definition-Refactoring.GURU./</guid><description>#tech/architecture #tech/programming #design-patterns
Design patterns definition Refactoring.GURU. Design patterns are typical solutions to commonly occurring problems in software design.</description></item><item><title>How to install make in windows</title><link>https://chris-cadev.github.io/knowledge/How-to-install-make-in-windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chris-cadev.github.io/knowledge/How-to-install-make-in-windows/</guid><description>#tech/bash #tech/programming To install make you need to install choco first.
Then you need to run in administrator this command.</description></item><item><title>Network of The Witcher - Relationship Extraction &amp; Network Analysis with Spacy &amp; NetworkX</title><link>https://chris-cadev.github.io/knowledge/Bibliography/Network-of-The-Witcher-Relationship-Extraction-Network-Analysis-with-Spacy-NetworkX/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chris-cadev.github.io/knowledge/Bibliography/Network-of-The-Witcher-Relationship-Extraction-Network-Analysis-with-Spacy-NetworkX/</guid><description>#tech/programming #tech/python #tech/vizualization
Network of The Witcher - Relationship Extraction &amp;amp; Network Analysis with [[Spacy]] &amp;amp; [[NetworkX]] Extracts way to create graph vizualization code to reverse columns in relation ships [[generate the weight of each relationship]] References source https://www.</description></item><item><title>strategy pattern graph</title><link>https://chris-cadev.github.io/knowledge/Extracts/strategy-pattern-graph/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chris-cadev.github.io/knowledge/Extracts/strategy-pattern-graph/</guid><description>#tech/architecture #tech/programming #design-patterns
strategy pattern graph [[strategy pattern solution.png]]
References position Design patterns - Strategy Position heading</description></item><item><title>Strategy pattern intent</title><link>https://chris-cadev.github.io/knowledge/Extracts/Strategy-pattern-intent/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chris-cadev.github.io/knowledge/Extracts/Strategy-pattern-intent/</guid><description>#tech/architecture #tech/programming #design-patterns
Strategy pattern intent Strategy is a behavioral design pattern that lets you define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.</description></item><item><title>Strategy pseudocode</title><link>https://chris-cadev.github.io/knowledge/Extracts/Strategy-pseudocode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chris-cadev.github.io/knowledge/Extracts/Strategy-pseudocode/</guid><description>#tech/architecture #tech/programming #design-patterns
Strategy pseudocode 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 // The strategy interface declares operations common to all // supported versions of some algorithm.</description></item></channel></rss>